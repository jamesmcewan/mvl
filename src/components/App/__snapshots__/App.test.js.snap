// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should render the correct JSX 1`] = `
.c6 {
  padding-top: 0;
  margin: 0 auto;
  text-align: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
}

.c3 {
  font-size: 16px;
  padding: 13px 6px;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  background: transparent;
  color: #6272a4;
  box-sizing: border-box;
  border: 0;
}

.c4 {
  font-size: 16px;
  padding: 13px 6px;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  background: transparent;
  color: #6272a4;
  box-sizing: border-box;
  border: 0;
  color: #ff79c6;
}

.c0 {
  width: 100%;
  position: fixed;
  z-index: 1;
  bottom: 0;
  background: #151617 linear-gradient(#1a0f21,#151617 70%) no-repeat;
  padding: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
}

.c2 {
  max-width: 150px;
}

.c1 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  background: #1e1b2f;
  width: 100%;
  text-align: center;
  -webkit-order: 1;
  -ms-flex-order: 1;
  order: 1;
}

.c7 {
  text-align: center;
  margin-bottom: 120px;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

@media screen and (min-width:700px) {
  .c3 {
    padding: 13px;
    font-size: 26px;
  }
}

@media screen and (min-width:700px) {
  .c4 {
    padding: 13px;
    font-size: 26px;
  }
}

@media screen and (min-width:700px) {
  .c0 {
    bottom: auto;
  }
}

@media screen and (min-width:700px) {
  .c1 {
    -webkit-order: 0;
    -ms-flex-order: 0;
    order: 0;
  }
}

@media screen and (min-width:700px) {
  .c5 {
    padding-top: 170px;
  }
}

<App>
  <div>
    <Navigation
      dateDescriptor="thisWeek"
      dateDescriptors={
        Array [
          "Last Week",
          "This Week",
          "Next Week",
        ]
      }
      handleClick={[Function]}
    >
      <styled.nav>
        <nav
          className="c0"
        >
          <styled.header>
            <header
              className="c1"
            >
              <styled.img
                alt="MVL"
                src="logo.svg"
              >
                <img
                  alt="MVL"
                  className="c2"
                  src="logo.svg"
                />
              </styled.img>
            </header>
          </styled.header>
          <Button
            current={false}
            dateDescriptor="Last Week"
            handleClick={[Function]}
            key="button-Last Week"
          >
            <styled.button
              current={false}
              onClick={[Function]}
            >
              <button
                className="c3"
                onClick={[Function]}
              >
                Last Week
              </button>
            </styled.button>
          </Button>
          <Button
            current={true}
            dateDescriptor="This Week"
            handleClick={[Function]}
            key="button-This Week"
          >
            <styled.button
              current={true}
              onClick={[Function]}
            >
              <button
                className="c4"
                onClick={[Function]}
              >
                This Week
              </button>
            </styled.button>
          </Button>
          <Button
            current={false}
            dateDescriptor="Next Week"
            handleClick={[Function]}
            key="button-Next Week"
          >
            <styled.button
              current={false}
              onClick={[Function]}
            >
              <button
                className="c3"
                onClick={[Function]}
              >
                Next Week
              </button>
            </styled.button>
          </Button>
        </nav>
      </styled.nav>
    </Navigation>
    <styled.div>
      <div
        className="c5"
      >
        <Comics
          changeSpotlight={[Function]}
          comics={Array []}
          isSpotlightVisible={false}
        >
          <styled.section>
            <section
              className="c6"
            />
          </styled.section>
        </Comics>
      </div>
    </styled.div>
    <Footer
      attributionText=""
    >
      <styled.footer>
        <footer
          className="c7"
        >
          <p />
        </footer>
      </styled.footer>
    </Footer>
  </div>
</App>
`;
