// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should render the correct JSX 1`] = `
.c7 {
  text-align: center;
  margin-bottom: 120px;
}

.c0 {
  width: 100%;
  position: fixed;
  z-index: 1;
  bottom: 0;
  background: #151617 linear-gradient(#1a0f21,#151617 70%) no-repeat;
  padding: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
}

.c2 {
  max-width: 150px;
}

.c1 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  background: #1e1b2f;
  width: 100%;
  text-align: center;
  -webkit-order: 1;
  -ms-flex-order: 1;
  order: 1;
}

.c3 {
  font-size: 16px;
  padding: 13px 6px;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  background: transparent;
  color: #6272a4;
  box-sizing: border-box;
  border: 0;
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c3[aria-current=true] {
  color: #ff79c6;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 52px auto;
}

.c6 {
  -webkit-animation: iVXCSc 2s linear infinite;
  animation: iVXCSc 2s linear infinite;
  font-size: 100px;
  width: 100px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

@media screen and (min-width:700px) {
  .c0 {
    bottom: auto;
  }
}

@media screen and (min-width:700px) {
  .c1 {
    -webkit-order: 0;
    -ms-flex-order: 0;
    order: 0;
  }
}

@media screen and (min-width:700px) {
  .c3 {
    padding: 13px;
    font-size: 26px;
  }
}

@media screen and (min-width:700px) {
  .c4 {
    padding-top: 170px;
  }
}

<App>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Navigation>
        <styled.nav>
          <nav
            className="c0"
          >
            <styled.header>
              <header
                className="c1"
              >
                <styled.img
                  alt="MVL"
                  src="logo.svg"
                >
                  <img
                    alt="MVL"
                    className="c2"
                    src="logo.svg"
                  />
                </styled.img>
              </header>
            </styled.header>
            <Styled(NavLink)
              to="/lastweek"
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                className="c3"
                to="/lastweek"
              >
                <Route
                  path="/lastweek"
                >
                  <Link
                    aria-current={false}
                    className="c3"
                    replace={false}
                    to="/lastweek"
                  >
                    <a
                      aria-current={false}
                      className="c3"
                      href="/lastweek"
                      onClick={[Function]}
                    >
                      Last week
                    </a>
                  </Link>
                </Route>
              </NavLink>
            </Styled(NavLink)>
            <Styled(NavLink)
              to="/thisweek"
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                className="c3"
                to="/thisweek"
              >
                <Route
                  path="/thisweek"
                >
                  <Link
                    aria-current={false}
                    className="c3"
                    replace={false}
                    to="/thisweek"
                  >
                    <a
                      aria-current={false}
                      className="c3"
                      href="/thisweek"
                      onClick={[Function]}
                    >
                      This week
                    </a>
                  </Link>
                </Route>
              </NavLink>
            </Styled(NavLink)>
            <Styled(NavLink)
              to="/nextweek"
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                className="c3"
                to="/nextweek"
              >
                <Route
                  path="/nextweek"
                >
                  <Link
                    aria-current={false}
                    className="c3"
                    replace={false}
                    to="/nextweek"
                  >
                    <a
                      aria-current={false}
                      className="c3"
                      href="/nextweek"
                      onClick={[Function]}
                    >
                      Next week
                    </a>
                  </Link>
                </Route>
              </NavLink>
            </Styled(NavLink)>
          </nav>
        </styled.nav>
      </Navigation>
      <Route
        component={[Function]}
        exact={true}
        path="/"
      >
        <ComicsNav
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <styled.div>
            <div
              className="c4"
            >
              <Loading>
                <styled.div>
                  <div
                    className="c5"
                  >
                    <styled.div>
                      <div
                        className="c6"
                      >
                        ⚙
                      </div>
                    </styled.div>
                  </div>
                </styled.div>
              </Loading>
            </div>
          </styled.div>
        </ComicsNav>
      </Route>
      <Route
        component={[Function]}
        path="/thisweek"
      />
      <Route
        component={[Function]}
        path="/lastweek"
      />
      <Route
        component={[Function]}
        path="/nextweek"
      />
      <Footer
        attributionText="© Marvel"
      >
        <styled.footer>
          <footer
            className="c7"
          >
            <p>
              © Marvel
            </p>
          </footer>
        </styled.footer>
      </Footer>
    </Router>
  </BrowserRouter>
</App>
`;
